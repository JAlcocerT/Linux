#!/bin/sh

sudo apt-get update
sudo apt dist-upgrade
 
#unnatended upgrades
sudo apt install unattended-upgrades
systemctl status unattended-upgrades

#firewall
sudo ss -tupln #ports in use
sudo apt install ufw #ufw
sudo ufw status
sudo ufw allow 717 #example to allow conexion
sudo ufw enable
sudo ufw status
sudo ufw reload #restart it

#ssh to rpi
sudo apt-get install openssh-server -y #verify that it is installed on the server
sudo systemctl enable ssh #enable it
sudo service ssh status
sudo service ssh start
#sudo service ssh restart
#sudo netstat -ltnp | grep sshd #check the server listering port (22 is the default)
grep -i port /etc/ssh/sshd_config #will read from the config file the port that its being listened
#ssh -p [port_number] [username]@[ip_address] #if its other port this one should be used, example: ssh -p [2244] [username]@[ip_address]
#sudo ufw allow 2244/tcp #and firewall should allow traffic in that port
# sudo ufw reload
#sudo ufw status

sudo ssh pi@192.168.1.31 #connecting to server from the client just to check that it works
nano ~/.ssh/authorized_keys #this is were the authorized keys will be stored (IN THE RPi)
exit
sudo ssh-keygen #generating the keys on the client, the public one has to be copied on the server
sudo ssh-copy-id -i ~/.ssh/id_rsa pi@192.168.1.31
sudo ssh pi@192.168.1.31 #connecting again to check if the certificate worked

#cat .ssh/id_rsa.pub
#sudo nano .ssh/authorized_keys #and include it on the server
#logout #logout from server and next time should not ask for any pass

#if desired, password login can be disabled on the server (RPi here)
sudo ssh pi@192.168.1.31
sudo nano /etc/ssh/sshd_config
PasswordAuthentication no #to be changed
sudo systemctl restart sshd #to changes to be applied

sudo ss -tulpn | grep ssh #to check that the new port is running
sudo netstat -tulpn | grep ssh #to check that the new port is running (needs: sudo apt install net-tools)

#fail2ban
sudo apt-get install -y \
apt-transport-https \
ca-certificates \
curl \
gnupg2 \
vim \
fail2ban \
ntfs-3g

sudo nano /etc/fail2ban/jail.conf
sudo nano /var/log/fail2ban.log
