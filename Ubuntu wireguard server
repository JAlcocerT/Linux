#!/bin/sh

#Server side

sudo apt-get update && sudo apt-get upgrade -y

mkdir wireguard
cd wireguard
git clone https://github.com/lawrencesystems/dotfiles.git
sh install.sh

sudo nano /etc/sysctl.conf
#and change and uncomment to the line that says net.ipv4.ip_forward=1

sysctl -p #to activate the changes

sudo apt-get install wireguard -y

sudo su
cd /etc/wireguard
umask 077; wg genkey | tee privatekey | wg pubkey > publickey #this will generate the keys for the server
ls

sudo nano wg0.conf
AGT555E2JrKCzMaJJm3ZC9RcBdGXCws2kXLpI4b3C0A= private key
vWhSmTGL32WOtBoMUP52lRMMA3xEsphDpNfugswfil0= public key


[Interface]
PrivateKey = AGT555E2JrKCzMaJJm3ZC9RcBdGXCws2kXLpI4b3C0A=
Address = 192.168.69.1/24
ListenPort = 51820
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE





wg-quick up wg0


To test that the server works run wg-quick up wg0 to bring up the interface. Running wg-quick down will bring the interface down.

If you want the wg0 interface to be active on boot you need to run
systemctl enable wg-quick@wg0

Then you can use to systemctl start wg-quick@wg0 start the server, systemctl stop wg-quick@wg0 stop the server and systemctl status wg-quick@wg0 to check the status.
